---
image: ghcr.io/astral-sh/uv:python3.13-bookworm

stages:
  - test
  - build
  - publish

variables:
    UV_CACHE_DIR: $CI_PROJECT_DIR/.uv-cache

cache:
    paths:
      - $UV_CACHE_DIR

test:
    stage: test
    script:
      - uv sync --frozen --all-packages
      - uv run python --version
      - uv run ruff format .
      - uv run ruff check .
      - uv run mypy .
      - uv run pytest
      - mkdir report
      - mkdir report/coverage
      - mv .pytest_cache/pytest_report.html .pytest_cache/assets/ report/
      - mv .coverage/html_output/ report/coverage
      - uv cache prune --ci
    coverage: /TOTAL[\s\d]+\s(\d+%)/
    artifacts:
        paths:
          - report

build-spectrum:
    stage: build
    script:
      - cd packages/spectrum/
      - uv build
    artifacts:
        paths:
          - dist/
    rules:
      - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^spectrum/

publish-spectrum:
    stage: publish
    script:
      - uv publish --username gitlab-ci-token --password ${CI_JOB_TOKEN} --native-tls dist/spectrum-*
    rules:
      - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^spectrum/

build-x-viz:
    stage: build
    script:
      - cd packages/x_viz/
      - uv build
    artifacts:
        paths:
          - dist/
    rules:
      - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^x-viz/

publish-x_viz:
    stage: publish
    script:
      - uv publish --username gitlab-ci-token --password ${CI_JOB_TOKEN} --native-tls dist/x_viz-*
    rules:
      - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^x-viz/
